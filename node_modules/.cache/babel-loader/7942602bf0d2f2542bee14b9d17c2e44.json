{"ast":null,"code":"import productsServices from '../services/products.services';\nimport { createSlice } from '@reduxjs/toolkit';\nimport { configureStore } from '@reduxjs/toolkit';\nconst productSlice = createSlice({\n  name: 'product',\n  initialState: {\n    listProducts: [{\n      id: 0,\n      title: \"\",\n      price: 0,\n      description: \"\",\n      published: 0,\n      sizeId: \"\"\n    }],\n    loader: false\n  },\n  reducers: {\n    setListProducts(state, action) {\n      state.listProducts = [...action.payload];\n    },\n    addProduct(state, action) {\n      listProducts.push(action.payload);\n    },\n    onDeleteProduct(state, action) {\n      let newList = [...listProducts];\n      let index = newList.findIndex(element => element.id === action.payload);\n      newList.splice(index, 1);\n      listProducts = newList;\n    },\n    updateProduct2(state, action) {\n      let newList = [...listProducts];\n      let index = newList.findIndex(element => element.id === action.payload.id);\n      newList[index] = action.payload.newProduct;\n      listProducts = newList;\n    },\n    getProducts(state) {\n      productsServices.getProduct().then(response => {\n        if (response.status == 200) {\n          console.log(\"data\", response.data.data);\n          listProducts = response.data.data;\n        }\n      });\n    }\n  }\n});\nexport const {\n  setListProducts,\n  addProduct,\n  onDeleteProduct,\n  updateProduct2,\n  getProducts\n} = productSlice.actions;\nexport const store = configureStore({\n  reducer: {\n    product: productSlice.reducer\n  }\n});\n\n/* export const setListProducts = (listProducts: Array<Product>) =>{\r\n  return {\r\n    type : \"product/setListProducts\",\r\n    payload : listProducts\r\n  }\r\n}\r\n\r\nexport const addProduct = (product: Product) =>{\r\n  return {\r\n    type : \"product/addProduct\",\r\n    payload : product\r\n  }\r\n} \r\nexport const onDeleteProduct = (id:number) =>{\r\n  return {\r\n    type : \"product/onDeleteProduct\",\r\n    payload : id\r\n  }\r\n} \r\nexport const updateProduct = (id:number, newProduct: Product) =>{\r\n  return {\r\n    type : \"product/updateProduct\",\r\n    payload : id,newProduct\r\n    \r\n  }\r\n} \r\nexport const getProducts = () =>{\r\n  return {\r\n    type : \"product/getProducts\",\r\n  }\r\n}  */","map":{"version":3,"names":["productsServices","createSlice","configureStore","productSlice","name","initialState","listProducts","id","title","price","description","published","sizeId","loader","reducers","setListProducts","state","action","payload","addProduct","push","onDeleteProduct","newList","index","findIndex","element","splice","updateProduct2","newProduct","getProducts","getProduct","then","response","status","console","log","data","actions","store","reducer","product"],"sources":["D:/Apprentissage/React-Redux-TS-Node/reactts/src/store/productStore.ts"],"sourcesContent":["\r\nimport productsServices from '../services/products.services';\r\nimport {Product} from '../interfaces/product'\r\nimport {createSlice, PayloadAction } from '@reduxjs/toolkit'\r\nimport { configureStore } from '@reduxjs/toolkit'\r\n\r\n\r\nconst  productSlice = createSlice({\r\n\r\n  name: 'product',\r\n  initialState: {listProducts:[{    id: 0,\r\n    title: \"\",\r\n    price: 0,\r\n    description: \"\",\r\n    published: 0,\r\n    sizeId: \"\"}],loader:false} ,\r\n  reducers: {\r\n    setListProducts(state, action:PayloadAction<Array<Product>>){\r\n      \r\n     state.listProducts=[...action.payload]\r\n      },\r\n    \r\n    addProduct(state, action:PayloadAction<Product>){\r\n        listProducts.push(action.payload)\r\n      },\r\n    \r\n    onDeleteProduct(state, action:PayloadAction<number>){\r\n        let newList=[...listProducts]\r\n        let index= newList.findIndex((element:Product)=>element.id===action.payload)\r\n        newList.splice(index,1)\r\n        listProducts=newList\r\n      },\r\n\r\n      \r\n    \r\n    updateProduct2(state, action:PayloadAction<{id:number,newProduct:Product}> ) {\r\n        let newList=[...listProducts]\r\n        let index =newList.findIndex((element:Product)=>element.id===action.payload.id)\r\n        \r\n        newList[index]=action.payload.newProduct\r\n        listProducts=newList\r\n    \r\n      },\r\n\r\n    getProducts (state) {\r\n        productsServices.getProduct().then((response:any)=>{\r\n          if (response.status== 200){\r\n            console.log(\"data\",response.data.data)\r\n            listProducts=(response.data.data)\r\n           }\r\n        })\r\n         } ,\r\n    \r\n  },\r\n});\r\n\r\nexport const {setListProducts, addProduct, onDeleteProduct, updateProduct2, getProducts } = productSlice.actions;\r\n\r\nexport const store  = configureStore({\r\n  reducer : {\r\n    product : productSlice.reducer\r\n  }\r\n})\r\n\r\nexport type RootState = ReturnType<typeof store.getState>\r\nexport type AppDispatch = typeof store.dispatch\r\n\r\n/* export const setListProducts = (listProducts: Array<Product>) =>{\r\n  return {\r\n    type : \"product/setListProducts\",\r\n    payload : listProducts\r\n  }\r\n}\r\n\r\nexport const addProduct = (product: Product) =>{\r\n  return {\r\n    type : \"product/addProduct\",\r\n    payload : product\r\n  }\r\n} \r\nexport const onDeleteProduct = (id:number) =>{\r\n  return {\r\n    type : \"product/onDeleteProduct\",\r\n    payload : id\r\n  }\r\n} \r\nexport const updateProduct = (id:number, newProduct: Product) =>{\r\n  return {\r\n    type : \"product/updateProduct\",\r\n    payload : id,newProduct\r\n    \r\n  }\r\n} \r\nexport const getProducts = () =>{\r\n  return {\r\n    type : \"product/getProducts\",\r\n  }\r\n}  */"],"mappings":"AACA,OAAOA,gBAAgB,MAAM,+BAA+B;AAE5D,SAAQC,WAAW,QAAuB,kBAAkB;AAC5D,SAASC,cAAc,QAAQ,kBAAkB;AAGjD,MAAOC,YAAY,GAAGF,WAAW,CAAC;EAEhCG,IAAI,EAAE,SAAS;EACfC,YAAY,EAAE;IAACC,YAAY,EAAC,CAAC;MAAKC,EAAE,EAAE,CAAC;MACrCC,KAAK,EAAE,EAAE;MACTC,KAAK,EAAE,CAAC;MACRC,WAAW,EAAE,EAAE;MACfC,SAAS,EAAE,CAAC;MACZC,MAAM,EAAE;IAAE,CAAC,CAAC;IAACC,MAAM,EAAC;EAAK,CAAC;EAC5BC,QAAQ,EAAE;IACRC,eAAe,CAACC,KAAK,EAAEC,MAAoC,EAAC;MAE3DD,KAAK,CAACV,YAAY,GAAC,CAAC,GAAGW,MAAM,CAACC,OAAO,CAAC;IACrC,CAAC;IAEHC,UAAU,CAACH,KAAK,EAAEC,MAA6B,EAAC;MAC5CX,YAAY,CAACc,IAAI,CAACH,MAAM,CAACC,OAAO,CAAC;IACnC,CAAC;IAEHG,eAAe,CAACL,KAAK,EAAEC,MAA4B,EAAC;MAChD,IAAIK,OAAO,GAAC,CAAC,GAAGhB,YAAY,CAAC;MAC7B,IAAIiB,KAAK,GAAED,OAAO,CAACE,SAAS,CAAEC,OAAe,IAAGA,OAAO,CAAClB,EAAE,KAAGU,MAAM,CAACC,OAAO,CAAC;MAC5EI,OAAO,CAACI,MAAM,CAACH,KAAK,EAAC,CAAC,CAAC;MACvBjB,YAAY,GAACgB,OAAO;IACtB,CAAC;IAIHK,cAAc,CAACX,KAAK,EAAEC,MAAoD,EAAG;MACzE,IAAIK,OAAO,GAAC,CAAC,GAAGhB,YAAY,CAAC;MAC7B,IAAIiB,KAAK,GAAED,OAAO,CAACE,SAAS,CAAEC,OAAe,IAAGA,OAAO,CAAClB,EAAE,KAAGU,MAAM,CAACC,OAAO,CAACX,EAAE,CAAC;MAE/Ee,OAAO,CAACC,KAAK,CAAC,GAACN,MAAM,CAACC,OAAO,CAACU,UAAU;MACxCtB,YAAY,GAACgB,OAAO;IAEtB,CAAC;IAEHO,WAAW,CAAEb,KAAK,EAAE;MAChBhB,gBAAgB,CAAC8B,UAAU,EAAE,CAACC,IAAI,CAAEC,QAAY,IAAG;QACjD,IAAIA,QAAQ,CAACC,MAAM,IAAG,GAAG,EAAC;UACxBC,OAAO,CAACC,GAAG,CAAC,MAAM,EAACH,QAAQ,CAACI,IAAI,CAACA,IAAI,CAAC;UACtC9B,YAAY,GAAE0B,QAAQ,CAACI,IAAI,CAACA,IAAK;QAClC;MACH,CAAC,CAAC;IACD;EAEP;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAACrB,eAAe;EAAEI,UAAU;EAAEE,eAAe;EAAEM,cAAc;EAAEE;AAAY,CAAC,GAAG1B,YAAY,CAACkC,OAAO;AAEhH,OAAO,MAAMC,KAAK,GAAIpC,cAAc,CAAC;EACnCqC,OAAO,EAAG;IACRC,OAAO,EAAGrC,YAAY,CAACoC;EACzB;AACF,CAAC,CAAC;;AAKF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}