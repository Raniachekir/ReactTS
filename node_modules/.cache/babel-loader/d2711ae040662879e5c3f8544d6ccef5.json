{"ast":null,"code":"import productsServices from \"../services/products.services\";\nimport { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { configureStore } from \"@reduxjs/toolkit\";\nexport const getProducts = createAsyncThunk('product/getProducts',\n// Declare the type your function argument here:\nasync () => {\n  const response = productsServices.getProduct();\n  return response;\n});\nexport const addProducts = createAsyncThunk('product/addProducts',\n// Declare the type your function argument here:\nasync data => {\n  const response = productsServices.addProduct(data);\n  return response;\n});\nexport const deleteProducts = createAsyncThunk('product/deleteProducts',\n// Declare the type your function argument here:\nasync id => {\n  const response = productsServices.deleteProduct(id);\n  return response;\n});\nexport const updateProducts = createAsyncThunk('product/updateProducts',\n// Declare the type your function argument here:\nasync _ref => {\n  let {\n    idProductToEdit,\n    ProductsData\n  } = _ref;\n  const response = productsServices.updateProduct(idProductToEdit, ProductsData);\n  console.log(\"response\", response);\n  return {\n    idProductToEdit,\n    ProductsData\n  };\n});\nconst productList = [];\nconst productSlice = createSlice({\n  name: \"product\",\n  initialState: {\n    listProducts: productList,\n    loader: false,\n    message: \"\",\n    error: false,\n    openAlert: false\n  },\n  reducers: {\n    setOpenAlert(state, action) {\n      state.openAlert = action.payload;\n    },\n    setListProducts(state, action) {\n      state.listProducts = action.payload;\n    },\n    addProduct(state, action) {\n      state.listProducts.push(action.payload);\n    },\n    onDeleteProductById(state, action) {\n      let index = state.listProducts.findIndex(element => element.id == action.payload);\n      state.listProducts.splice(index, 1);\n    },\n    updateProduct(state, action) {\n      let index = state.listProducts.findIndex(element => element.id === action.payload.id);\n      state.listProducts[index] = action.payload.newProduct;\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(getProducts.fulfilled, (state, _ref2) => {\n      let {\n        payload\n      } = _ref2;\n      console.log(\"payload\", payload);\n      state.listProducts = payload;\n      state.loader = false;\n    });\n    builder.addCase(getProducts.pending, (state, _ref3) => {\n      let {\n        payload\n      } = _ref3;\n      state.loader = true;\n    });\n    builder.addCase(addProducts.fulfilled, (state, _ref4) => {\n      let {\n        payload\n      } = _ref4;\n      console.log(\"payload\", payload);\n      state.listProducts.push(payload);\n      state.error = false;\n      state.message = \"Success\";\n      state.openAlert = true;\n    });\n    builder.addCase(addProducts.rejected, (state, _ref5) => {\n      let {\n        payload\n      } = _ref5;\n      state.error = true;\n      state.message = \"Missing Data\";\n      state.openAlert = true;\n    });\n    builder.addCase(deleteProducts.fulfilled, (state, _ref6) => {\n      let {\n        payload\n      } = _ref6;\n      console.log(\"payload\", payload);\n      let index = state.listProducts.findIndex(element => element.id === payload);\n      state.listProducts.splice(index, 1);\n      state.error = false;\n      state.message = \"Success Deleting\";\n      state.openAlert = true;\n    });\n    builder.addCase(deleteProducts.rejected, (state, _ref7) => {\n      let {\n        payload\n      } = _ref7;\n      state.error = true;\n      state.message = \"Not deleting\";\n      state.openAlert = true;\n    });\n    builder.addCase(updateProducts.fulfilled, (state, _ref8) => {\n      let {\n        payload\n      } = _ref8;\n      let index = state.listProducts.findIndex(element => element.id === payload.idProductToEdit);\n      state.listProducts[index] = payload.ProductsData;\n      state.error = false;\n      state.message = \"Success Update\";\n      state.openAlert = true;\n    });\n    builder.addCase(updateProducts.rejected, (state, _ref9) => {\n      let {\n        payload\n      } = _ref9;\n      state.error = true;\n      state.message = \"Missing Data\";\n      state.openAlert = true;\n    });\n  }\n});\nexport const {\n  setOpenAlert,\n  setListProducts,\n  addProduct,\n  onDeleteProductById,\n  updateProduct\n} = productSlice.actions;\nexport const store = configureStore({\n  reducer: {\n    product: productSlice.reducer\n  }\n});","map":{"version":3,"names":["productsServices","createAsyncThunk","createSlice","configureStore","getProducts","response","getProduct","addProducts","data","addProduct","deleteProducts","id","deleteProduct","updateProducts","idProductToEdit","ProductsData","updateProduct","console","log","productList","productSlice","name","initialState","listProducts","loader","message","error","openAlert","reducers","setOpenAlert","state","action","payload","setListProducts","push","onDeleteProductById","index","findIndex","element","splice","newProduct","extraReducers","builder","addCase","fulfilled","pending","rejected","actions","store","reducer","product"],"sources":["D:/Apprentissage/React-Redux-TS-Node/reactts/src/store/productStore.ts"],"sourcesContent":["import productsServices from \"../services/products.services\";\r\nimport { Product } from \"../interfaces/product\";\r\nimport { createAsyncThunk, createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport { configureStore } from \"@reduxjs/toolkit\";\r\n\r\nexport const getProducts = createAsyncThunk(\r\n  'product/getProducts',\r\n  // Declare the type your function argument here:\r\n  async () => {\r\n    const response = productsServices.getProduct()\r\n    return response\r\n\r\n  }\r\n)\r\n\r\nexport const addProducts = createAsyncThunk(\r\n  'product/addProducts',\r\n  // Declare the type your function argument here:\r\n  async (data: Product) => {\r\n    const response = productsServices.addProduct(data)\r\n    return response\r\n  }\r\n)\r\n\r\nexport const deleteProducts = createAsyncThunk(\r\n  'product/deleteProducts',\r\n  // Declare the type your function argument here:\r\n  async (id: number) => {\r\n    const response = productsServices.deleteProduct(id)\r\n    return response\r\n  }\r\n)\r\n\r\nexport const updateProducts = createAsyncThunk(\r\n  'product/updateProducts',\r\n  // Declare the type your function argument here:\r\n  async ({idProductToEdit,ProductsData}:any) => {\r\n    const response = productsServices.updateProduct(idProductToEdit,ProductsData)\r\n    console.log(\"response\",response)\r\n    return {idProductToEdit,ProductsData}\r\n  }\r\n)\r\n\r\nconst productList:Array<Product>=[]\r\nconst productSlice = createSlice({\r\n  name: \"product\",\r\n  initialState: {\r\n    listProducts: productList,\r\n    loader: false,\r\n    message:\"\",\r\n    error:false,\r\n    openAlert:false\r\n  },\r\n  reducers: {\r\n    setOpenAlert(state,action){\r\nstate.openAlert=action.payload\r\n    },\r\n    setListProducts(state, action) {\r\n      state.listProducts = action.payload;\r\n    },\r\n\r\n    addProduct(state, action:PayloadAction<Product>) {\r\n      state.listProducts.push(action.payload);\r\n    },\r\n\r\n    onDeleteProductById(state, action) {\r\n      let index = state.listProducts.findIndex(\r\n        (element: Product) => element.id == action.payload\r\n      );\r\n      state.listProducts.splice(index, 1);\r\n    },\r\n\r\n    updateProduct(\r\n      state,\r\n      action\r\n    ) {\r\n      let index = state.listProducts.findIndex(\r\n        (element: Product) => element.id === action.payload.id\r\n      );\r\n\r\n      state.listProducts[index] = action.payload.newProduct;\r\n    },\r\n\r\n\r\n  },\r\n  extraReducers:(builder) => {\r\n    builder.addCase(getProducts.fulfilled, (state, { payload }) => {\r\n      console.log(\"payload\",payload)\r\n      state.listProducts=payload\r\n      state.loader=false\r\n    })\r\n    builder.addCase(getProducts.pending, (state, { payload }) => {\r\n      state.loader=true\r\n     \r\n    })\r\n    builder.addCase(addProducts.fulfilled, (state, { payload }) => {\r\n      console.log(\"payload\",payload)\r\n      state.listProducts.push(payload)\r\n      state.error=false\r\n      state.message=\"Success\"\r\n      state.openAlert=true\r\n    })\r\n    builder.addCase(addProducts.rejected, (state, { payload }) => {\r\n         state.error=true\r\n         state.message=\"Missing Data\"\r\n         state.openAlert=true\r\n    })\r\n\r\n    builder.addCase(deleteProducts.fulfilled, (state, { payload }) => {\r\n      console.log(\"payload\",payload)\r\n      let index = state.listProducts.findIndex(\r\n        (element: Product) => element.id === payload\r\n      );\r\n      state.listProducts.splice(index, 1);\r\n      state.error=false\r\n      state.message=\"Success Deleting\"\r\n      state.openAlert=true\r\n      \r\n    })\r\n    builder.addCase(deleteProducts.rejected, (state, { payload }) => {\r\n      state.error=true\r\n      state.message=\"Not deleting\"\r\n      state.openAlert=true\r\n })\r\n builder.addCase(updateProducts.fulfilled, (state, { payload }) => {\r\n  let index = state.listProducts.findIndex(\r\n    (element: Product) => element.id === payload.idProductToEdit);\r\n\r\n  state.listProducts[index] = payload.ProductsData;\r\n  state.error=false\r\n  state.message=\"Success Update\"\r\n  state.openAlert=true\r\n})\r\nbuilder.addCase(updateProducts.rejected, (state, { payload }) => {\r\n     state.error=true\r\n     state.message=\"Missing Data\"\r\n     state.openAlert=true\r\n})\r\n  }\r\n});\r\n\r\nexport const {\r\n  setOpenAlert,\r\n  setListProducts,\r\n  addProduct,\r\n  onDeleteProductById,\r\n  updateProduct,\r\n} = productSlice.actions;\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    product: productSlice.reducer },\r\n});\r\n\r\nexport type RootState = ReturnType<typeof store.getState>;\r\nexport type AppDispatch = typeof store.dispatch;\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}