{"ast":null,"code":"import productsServices from '../services/products.services';\nimport { createSlice } from '@reduxjs/toolkit';\nimport { configureStore } from '@reduxjs/toolkit';\nlet listProducts = [];\nconst productSlice = createSlice({\n  name: 'product',\n  initialState: listProducts,\n  reducers: {\n    setListProducts(state, action) {\n      listProducts = [...action.payload];\n    },\n    addProduct(state, action) {\n      listProducts.push(action.payload);\n    },\n    onDeleteProduct(state, action) {\n      let newList = [...listProducts];\n      let index = newList.findIndex(element => element.id === action.payload);\n      newList.splice(index, 1);\n      listProducts = newList;\n    },\n    updateProduct(state, action) {\n      let newList = [...listProducts];\n      let index = newList.findIndex(element => element.id === action.payload);\n      newList[index] = action.payload;\n      listProducts = newList;\n    },\n    getProducts(state) {\n      productsServices.getProduct().then(response => {\n        if (response.status == 200) {\n          console.log(\"data\", response.data.data);\n          listProducts = response.data.data;\n        }\n      });\n    }\n  }\n});\nexport const store = configureStore({\n  reducer: {\n    product: productSlice.reducer\n  }\n});","map":{"version":3,"names":["productsServices","createSlice","configureStore","listProducts","productSlice","name","initialState","reducers","setListProducts","state","action","payload","addProduct","push","onDeleteProduct","newList","index","findIndex","element","id","splice","updateProduct","getProducts","getProduct","then","response","status","console","log","data","store","reducer","product"],"sources":["D:/Apprentissage/React-Redux-TS-Node/reactts/src/store/productStore.ts"],"sourcesContent":["\r\nimport productsServices from '../services/products.services';\r\nimport {Product} from '../interfaces/product'\r\nimport {createSlice, PayloadAction } from '@reduxjs/toolkit'\r\nimport { configureStore } from '@reduxjs/toolkit'\r\n\r\nlet  listProducts :Array<Product> = [];\r\n\r\nconst  productSlice = createSlice({\r\n\r\n  name: 'product',\r\n  initialState: listProducts ,\r\n  reducers: {\r\n    setListProducts(state, action:PayloadAction<Array<Product>>){\r\n      listProducts=[...action.payload]\r\n      },\r\n    \r\n    addProduct(state, action:PayloadAction<Product>){\r\n        listProducts.push(action.payload)\r\n      },\r\n    \r\n    onDeleteProduct(state, action:PayloadAction<number>){\r\n        let newList=[...listProducts]\r\n        let index= newList.findIndex((element:Product)=>element.id===action.payload)\r\n        newList.splice(index,1)\r\n        listProducts=newList\r\n      },\r\n    \r\n    updateProduct(state, action:PayloadAction<number | Product> ) {\r\n        let newList=[...listProducts]\r\n        let index =newList.findIndex((element:Product)=>element.id===action.payload)\r\n        \r\n        newList[index]=action.payload\r\n        listProducts=newList\r\n    \r\n      },\r\n\r\n    getProducts (state) {\r\n        productsServices.getProduct().then((response:any)=>{\r\n          if (response.status== 200){\r\n            console.log(\"data\",response.data.data)\r\n            listProducts=(response.data.data)\r\n           }\r\n        })\r\n         } ,\r\n    \r\n  },\r\n});\r\n\r\n\r\nexport const store  = configureStore({\r\n  reducer : {\r\n    product : productSlice.reducer\r\n  }\r\n})\r\n"],"mappings":"AACA,OAAOA,gBAAgB,MAAM,+BAA+B;AAE5D,SAAQC,WAAW,QAAuB,kBAAkB;AAC5D,SAASC,cAAc,QAAQ,kBAAkB;AAEjD,IAAKC,YAA4B,GAAG,EAAE;AAEtC,MAAOC,YAAY,GAAGH,WAAW,CAAC;EAEhCI,IAAI,EAAE,SAAS;EACfC,YAAY,EAAEH,YAAY;EAC1BI,QAAQ,EAAE;IACRC,eAAe,CAACC,KAAK,EAAEC,MAAoC,EAAC;MAC1DP,YAAY,GAAC,CAAC,GAAGO,MAAM,CAACC,OAAO,CAAC;IAChC,CAAC;IAEHC,UAAU,CAACH,KAAK,EAAEC,MAA6B,EAAC;MAC5CP,YAAY,CAACU,IAAI,CAACH,MAAM,CAACC,OAAO,CAAC;IACnC,CAAC;IAEHG,eAAe,CAACL,KAAK,EAAEC,MAA4B,EAAC;MAChD,IAAIK,OAAO,GAAC,CAAC,GAAGZ,YAAY,CAAC;MAC7B,IAAIa,KAAK,GAAED,OAAO,CAACE,SAAS,CAAEC,OAAe,IAAGA,OAAO,CAACC,EAAE,KAAGT,MAAM,CAACC,OAAO,CAAC;MAC5EI,OAAO,CAACK,MAAM,CAACJ,KAAK,EAAC,CAAC,CAAC;MACvBb,YAAY,GAACY,OAAO;IACtB,CAAC;IAEHM,aAAa,CAACZ,KAAK,EAAEC,MAAsC,EAAG;MAC1D,IAAIK,OAAO,GAAC,CAAC,GAAGZ,YAAY,CAAC;MAC7B,IAAIa,KAAK,GAAED,OAAO,CAACE,SAAS,CAAEC,OAAe,IAAGA,OAAO,CAACC,EAAE,KAAGT,MAAM,CAACC,OAAO,CAAC;MAE5EI,OAAO,CAACC,KAAK,CAAC,GAACN,MAAM,CAACC,OAAO;MAC7BR,YAAY,GAACY,OAAO;IAEtB,CAAC;IAEHO,WAAW,CAAEb,KAAK,EAAE;MAChBT,gBAAgB,CAACuB,UAAU,EAAE,CAACC,IAAI,CAAEC,QAAY,IAAG;QACjD,IAAIA,QAAQ,CAACC,MAAM,IAAG,GAAG,EAAC;UACxBC,OAAO,CAACC,GAAG,CAAC,MAAM,EAACH,QAAQ,CAACI,IAAI,CAACA,IAAI,CAAC;UACtC1B,YAAY,GAAEsB,QAAQ,CAACI,IAAI,CAACA,IAAK;QAClC;MACH,CAAC,CAAC;IACD;EAEP;AACF,CAAC,CAAC;AAGF,OAAO,MAAMC,KAAK,GAAI5B,cAAc,CAAC;EACnC6B,OAAO,EAAG;IACRC,OAAO,EAAG5B,YAAY,CAAC2B;EACzB;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module"}